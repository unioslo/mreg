# Generated by Django 5.0.9 on 2024-12-19 09:40

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('mreg', '0013_migrate_away_from_ci_fields'),
    ]

    operations = [
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Unique name of the community.', max_length=100, unique=True)),
                ('description', models.CharField(blank=True, help_text='Description of the community.', max_length=250)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NetworkPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Name of the network policy.', max_length=100, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NetworkPolicyAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Description of the attribute.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='host',
            name='network_community',
            field=models.ForeignKey(blank=True, help_text='Network community this host belongs to.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hosts', to='mreg.community'),
        ),
        migrations.AddField(
            model_name='community',
            name='policy',
            field=models.ForeignKey(help_text='The network policy this community is associated with.', on_delete=django.db.models.deletion.CASCADE, related_name='communities', to='mreg.networkpolicy'),
        ),
        migrations.AddField(
            model_name='network',
            name='policy',
            field=models.ForeignKey(blank=True, help_text='Optional policy applied to the network.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='networks', to='mreg.networkpolicy'),
        ),
        migrations.CreateModel(
            name='NetworkPolicyAttributeValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.BooleanField(default=False, help_text='Value of the attribute for this network policy.')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='network_policy_attribute_values', to='mreg.networkpolicyattribute')),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='network_policy_attribute_values', to='mreg.networkpolicy')),
            ],
            options={
                'verbose_name': 'Policy Attribute Value',
                'verbose_name_plural': 'Policy Attribute Values',
                'unique_together': {('policy', 'attribute')},
            },
        ),
        migrations.AddField(
            model_name='networkpolicy',
            name='attributes',
            field=models.ManyToManyField(help_text='Attributes associated with this policy.', related_name='policies', through='mreg.NetworkPolicyAttributeValue', to='mreg.networkpolicyattribute'),
        ),
    ]
